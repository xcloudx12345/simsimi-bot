// Generated by CoffeeScript 2.7.0
// Load config
var Eris, FileSync, Simsimi, adapter, app, client, config, db, fs, lowdb;
const keepAlive = require(`./server`);
const { ReplitKill } = require('replit-kill');
config = require("../config.json");

// Create Discord Client
Eris = require("eris");
client = new Eris(process.env.TOKEN);

client.commands = [];

client.config = config;

emojic = require("discord-emoji-converter");

// Create Simsimi Client
Simsimi = require("./simsimi");

client.simsimi = new Simsimi(config.simsimi);

// Init database
lowdb = require("lowdb");

FileSync = require("lowdb/adapters/FileSync");

adapter = new FileSync('./db.json');

db = lowdb(adapter);

db.defaults({
    chatUses: {},
    serversLanguages: {},
    serversChannels: {},
    serversPrefix: {},
    serverLevel: {}
}).write();

client.db = db;

// Load commands
fs = require("fs");

fs.readdir(`${__dirname}/commands`, function(err, data) {
    if (!data) {
        return console.log(`Không tìm thấy lệnh...`);
    }
    data.forEach(function(filePath) {
        var cmdData;
        cmdData = require(`${__dirname}/commands/${filePath}`);
        client.commands.push({
            name: cmdData.help.name,
            onlyMod: cmdData.help.onlyMod,
            run: cmdData.run
        });
        return console.log(`Loading Command: ${cmdData.help.name} 👌`);
    });
    return console.log(`Loading a total of ${client.commands.length} commands!`);
});

client.on('ready', function() {
    return console.log(`Logged as ${client.user.username}#${client.user.discriminator}`);
});

client.on('messageCreate', async function(message) {
    var args, command, commandFound, guildChannel, guildLanguage, res1, userData;
    const delemotes = (str) => str.replace(/<a?:.+?:\d{18}>|\p{Extended_Pictographic}/gu, " ");
    const chattext = delemotes(message.content);
    // Ignore bots
    if (message.author.bot || !message.channel) {
        return;
    }
    guildChannel = client.db.get("serversChannels").value()[message.channel.guild.id];
    if (guildChannel && message.channel.id === guildChannel) {

        // Check uses
        userData = client.db.get("chatUses").value()[message.author.id] || 0;
        if (userData > client.config.maxRequestPerUser) {
            return client.createMessage(message.channel.id, `:x: Bạn hành sim quá nhiều, sim đã nghỉ chơi bạn rồi!...`);
        }
        // Try to get guild language
        serversPrefix = client.db.get("serversPrefix").value()[message.channel.guild.id];
        if (serversPrefix) {
            config.prefix = serversPrefix;
        }
        if (!guildLanguage) {
            guildLanguage = 'vn';
        }
        guildLanguage = client.db.get("serversLanguages").value()[message.channel.guild.id];
        if (!guildLanguage) {
            guildLanguage = 'vn';
        }
        level = client.db.get("serverLevel").value()[message.channel.guild.id];
        if (!level) {
            level = '1';
        }
        // Make the request
        //res1 = (await client.simsimi.request(chattext, guildLanguage));
        res1 = await client.simsimi.doPostRequest(chattext, guildLanguage, level);
        if (!res1) {
            message.addReaction("😳");
            return client.createMessage(message.channel.id, `:x: mạng lag, đứng hình mất 5s`);
        }
        if (res1 == "error") {
            return client.createMessage(message.channel.id, `:x: chat Tiếng Việt đi, hông hiểu má ơi!...`);
        }
        if (/bố m là ai|bố mày là ai|ba m là ai|ba mày là ai/.test(message.content.toLowerCase())) {
            return client.createMessage(message.channel.id, `Là Pikachu chứ ai!!!`);
        }
        // Reply
        if (message.content.startsWith(config.prefix)) {

        }
        else {
            message.channel.createMessage({
                content: res1,
                messageReference: {
                    messageID: message.id
                }
            })
        }

        //client.createMessage(message.channel.id, `${res1}`);
        //client.createMessage(message.channel.id,`${res.message}`);
        //client.createMessage(message.channel.id, `${res.response}`);
        // Save uses
        client.db.set(`chatUses.${message.author.id}`, userData + 1).write();
    }
    if (!message.content.startsWith(config.prefix)) {
        return;
    }
    args = message.content.slice(config.prefix.length).trim().split(/ +/g);
    command = args.shift().toLowerCase();
    commandFound = client.commands.find(function(cmdData) {
        return cmdData.name === command;
    });
    if (!commandFound) {
        return client.createMessage(message.channel.id, `Sai lệnh. Gõ \`${config.prefix}help\` để xem lệnh.`);
    } else {
        if (commandFound.onlyMod && !message.member.permission.json.manageMessages) {
            return client.createMessage(message.channel.id, ":x: QTV mới xài được lệnh này");
        }
        if (commandFound.name === "eval" && message.author.id !== config.owner) {
            return client.createMessage(message.channel.id, ":x: Chỉ có Pikachu mới xài được lệnh này");
        }
        return commandFound.run(client, message, args);
    }
});

// Login to Discord
client.connect();
ReplitKill({ Client: client, Time: 300000 });
keepAlive();